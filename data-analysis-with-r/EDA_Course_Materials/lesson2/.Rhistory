udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
udacious
numbers <- c(1:10)
numbers
numbers <- c(numbers, 11:20)
numbers
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla", "John Koretoff")
mystery = nchar(udacious)
mystery
mystery == 11
udacious[mystery == 11]
data(mtcars)
names(mtcars)
?mtcars
mtcars
str(mtcars)
dim(mtcars)
?row.names
row.names(mtcars)
row.names(mtcars) <- c(1:32)
mtcars
data(mtcars)
head(mtcars, 10)
head(mtcars)
tail(mtcars, 3)
mtcars$mpg
mtcars$cyl
mtcars$hp
mean(mtcars$mpg)
getwd()
/lesson2")
setwd("/Users/johnkoretoff/code/udacity/data-analysis-with-r/EDA_Course_Materials/lesson2")
getwd()
statesInfo <- read.csv('stateData.csv')
View(statesInfo)
#set the working directory to the location of the dataset
getwd()
setwd("/Users/johnkoretoff/code/udacity/data-analysis-with-r/EDA_Course_Materials/lesson2")
#read in the data from the csv file
statesInfo <- read.csv('stateData.csv')
#subset the data for the NE
subset(statesInfo, state.region == 1)
#set the working directory to the location of the dataset
getwd()
setwd("/Users/johnkoretoff/code/udacity/data-analysis-with-r/EDA_Course_Materials/lesson2")
#read in the data from the csv file
statesInfo <- read.csv('stateData.csv')
#subset the data for the NE
subset(statesInfo, state.region == 1)
#alternative subsetting option
statesInfo[statesInfo$state.region == 2, ]
dim(stateSubsetBracket)
#set the working directory to the location of the dataset
getwd()
setwd("/Users/johnkoretoff/code/udacity/data-analysis-with-r/EDA_Course_Materials/lesson2")
#read in the data from the csv file
statesInfo <- read.csv('stateData.csv')
#subset the data for the NE
stateSubset <- subset(statesInfo, state.region == 1)
head(stateSubset, 2)
dim(stateSubset)
#alternative subsetting option
stateSubsetBracket <- statesInfo[statesInfo$state.region == 2, ]
head(stateSubsetBracket)
dim(stateSubsetBracket)
#set the working directory to the location of the dataset
getwd()
setwd("/Users/johnkoretoff/code/udacity/data-analysis-with-r/EDA_Course_Materials/lesson2")
#read in the data from the csv file
statesInfo <- read.csv('stateData.csv')
#subset the data for the NE
stateSubset <- subset(statesInfo, state.region == 1)
head(stateSubset, 2)
dim(stateSubset)
#alternative subsetting option
stateSubsetBracket <- statesInfo[statesInfo$state.region == 1, ]
head(stateSubsetBracket)
dim(stateSubsetBracket)
install.packages('knitr', dependencies = T)
library(knitr)
?cars
?cars
str(cars)
plot(cars)
library(knitr)
curl "https://www.quandl.com/api/v3/datasets/WIKI/FB.csv"
install.packages(Quandl)
install.packages('Quandl')
library(Quandl)
library(Quandl)
oil <- Quandl("NSE/OIL")
oil
View(oil)
library(Quandl)
# The quantmod package is ready for use:
library(quantmod)
# Load the Facebook data with the help of Quandl
Facebook <- Quandl("GOOG/NASDAQ_FB", type = "xts")
# Plot the chart with the help of candleChart()
candleChart(Facebook)
install.packages("quantmod")
library(quantmod)
library(Quandl)
# The quantmod package is ready for use:
library(quantmod)
# Load the Facebook data with the help of Quandl
Facebook <- Quandl("GOOG/NASDAQ_FB", type = "xts")
# Plot the chart with the help of candleChart()
candleChart(Facebook)
#import the dataset
pxd <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA")
View(pxd)
View(pxd)
#import the dataset
pxd <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA")
#checkout the dataset
str(pxd)
head(pxd)
tail(pxd)
class(pxd)
View(pxd)
#pull the desired pricing data
pxd_close <- subset(pxd, close)
#pull the desired pricing data
pxd_close <- pxd$Close
#inspect head
head(pxd_close)
#import the dataset
pxd <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA")
#checkout the dataset
str(pxd)
head(pxd)
tail(pxd)
class(pxd)
#pull the desired pricing data
pxd_close <- pxd[, "Close"]
#inspect head
head(pxd_close)
#import the dataset
pxd <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA")
#checkout the dataset
str(pxd)
head(pxd)
tail(pxd)
class(pxd)
#pull the desired pricing data
pxd_close <- pxd[, "Close", drop = FALSE]
#inspect head
head(pxd_close)
#import the dataset
pxd <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA")
#checkout the dataset
str(pxd)
head(pxd)
tail(pxd)
class(pxd)
#pull the desired pricing data
pxd_close <- pxd["Date", "Close", drop = FALSE]
#inspect head
head(pxd_close)
View(pxd_close)
#import the dataset
pxd <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA")
#checkout the dataset
str(pxd)
head(pxd)
tail(pxd)
class(pxd)
#pull the desired pricing data
pxd_close <- pxd[, "Close", drop = FALSE]
#inspect head
head(pxd_close)
#create a new dataframe with dates and closing prices
rownames(pxd_close) <- pxd$Date
#inspect head
head(pxd_close)
#subset the data
price_c <- pxd_close["2016-05-02"]
price_c
price_h <- pxd_close["2016-04-25"]
price_h
#subset the data
price_c <- pxd_close["2016-05-02",]
price_c
price_h <- pxd_close["2016-04-25",]
price_h
#plot data
plot(pxd_close)
plot(pxd$Close)
plot(pxd$Close, type = "1", col = "blue", lwd = 2, ylab = "Close", main = "Daily
Price of PXD")
plot(pxd$Close, type = "l", col = "blue", lwd = 2, ylab = "Close", main = "Daily
Price of PXD")
plot(pxd$Close, type = "l", col = "blue", lwd = 2, ylab = "Close", main = "Daily
Closing Price of PXD")
plot(pxd$Close, type = "l", col = "blue", lwd = 2, ylab = "Close", main = "Daily Closing Price of PXD")
plot(pxd$Close, type = "l", col = "blue", lwd = 2, ylab = "Close",
main = "Daily Closing Price of PXD")
?plot
View(pxd)
#import the dataset
pxd <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA")
#checkout the dataset
str(pxd)
head(pxd)
tail(pxd)
class(pxd)
#pull the desired pricing data
pxd_close <- pxd[, "Close", drop = FALSE]
#inspect head
head(pxd_close)
#create a new dataframe with dates and closing prices
rownames(pxd_close) <- pxd$Date
#inspect head
head(pxd_close)
#subset the data
price_c <- pxd_close["2016-05-02",]
price_c
price_h <- pxd_close["2016-04-25",]
price_h
#plot data
plot(pxd$Close, type = "l", col = "blue", lwd = 2, ylab = "Close",
main = "Daily Closing Price of PXD")
plot(pxd$Close, type = "l", col = "blue", lwd = 2, ylab = "Close",
main = "Daily Closing Price of PXD", xlim = (200, 0))
plot(pxd$Close, type = "l", col = "blue", lwd = 2, ylab = "Close",
main = "Daily Closing Price of PXD", xlim = ('200, 0'))
plot(pxd$Close, type = "l", col = "blue", lwd = 2, ylab = "Close",
main = "Daily Closing Price of PXD", xlim = ('200, 1'))
plot(pxd$Close, type = "l", col = "blue", lwd = 2, ylab = "Close",
main = "Daily Closing Price of PXD", xlim = c(200, 1))
main = "Daily Closing Price of PXD", xlim = c(4000, 1))
plot(pxd$Close, type = "l", col = "blue", lwd = 2, ylab = "Close",
main = "Daily Closing Price of PXD", xlim = c(4000, 1))
?Quandl
#import the dataset
pxd <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
type = "timeSeries", order = c("desc"), force_irregular = TRUE)
#checkout the dataset
str(pxd)
head(pxd)
tail(pxd)
class(pxd)
order = c("desc"), force_irregular = TRUE)
#import the dataset
pxd <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
order = c(desc), force_irregular = TRUE)
#checkout the dataset
str(pxd)
head(pxd)
tail(pxd)
class(pxd)
#import the dataset
pxd <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
order = c("desc", "asc"), force_irregular = TRUE)
#checkout the dataset
str(pxd)
head(pxd)
tail(pxd)
class(pxd)
#import the dataset
pxd <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
order = c("asc", "desc"), force_irregular = TRUE)
#checkout the dataset
str(pxd)
head(pxd)
tail(pxd)
class(pxd)
#pull the desired pricing data
pxd_close <- pxd[, "Close", drop = FALSE]
#inspect head
head(pxd_close)
#import the dataset
pxd <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
order = c("asc", "desc"), force_irregular = TRUE)
#checkout the dataset
str(pxd)
head(pxd)
tail(pxd)
class(pxd)
#chart the data
pxd_chart <- candleChart(pxd)
#import the dataset
pxd <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
order = c("asc", "desc"), force_irregular = TRUE)
#checkout the dataset
str(pxd)
head(pxd)
tail(pxd)
class(pxd)
#format for chart
pxd_chart_format <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
type = "xts", force_irregular = TRUE)
#chart dataset
pxd_chart <- candleChart(pxd_chart_format)
#import the dataset
pxd <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
order = c("asc", "desc"), force_irregular = TRUE)
#checkout the dataset
str(pxd)
head(pxd)
tail(pxd)
class(pxd)
#format for chart
pxd_chart_format <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
type = "xts", start_date = "2015-08-27",
end_date = "2016-05-03", force_irregular = TRUE)
#chart dataset
pxd_chart <- candleChart(pxd_chart_format)
?candleChart
pxd_close <- pxd[, "Close", drop = FALSE]
#inspect head
head(pxd_close)
rowname(pxd_close) <- pxd$Date
#inspect head
head(pxd_close)
rownames(pxd_close) <- pxd$Date
#inspect head
head(pxd_close)
pxd_daily_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
transform = c("rdiff"), collapse = ("daily"),
order = c("asc", "desc"), force_irregular = TRUE)
pxd_weekly_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
transform = c("rdiff"), collapse = ("weekly"),
order = c("asc", "desc"), force_irregular = TRUE)
pxd_monthly_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
transform = c("rdiff"), collapse = ("monthly"),
order = c("asc", "desc"), force_irregular = TRUE)
pxd_daily_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
transformation = c("rdiff"), collapse = ("daily"),
order = c("asc", "desc"), force_irregular = TRUE)
pxd_weekly_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
transformation = c("rdiff"), collapse = ("weekly"),
order = c("asc", "desc"), force_irregular = TRUE)
pxd_monthly_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
transformation = c("rdiff"), collapse = ("monthly"),
order = c("asc", "desc"), force_irregular = TRUE)
pxd_daily_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
transformation = c("rdiff"), collapse = ("daily"))
pxd_weekly_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
transformation = c("rdiff"), collapse = ("weekly"))
pxd_monthly_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
transformation = c("rdiff"), collapse = ("monthly"))
pxd_daily_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
transform = c("rdiff"), collapse = ("daily"))
pxd_weekly_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
transform = c("rdiff"), collapse = ("weekly"))
pxd_monthly_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
transform = c("rdiff"), collapse = ("monthly"))
pxd_daily_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
transform = c("rdiff"), collapse = ("daily"))
pxd_daily_returns
pxd_weekly_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
transform = c("rdiff"), collapse = ("weekly"))
pxd_weekly_returns
pxd_monthly_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
transform = c("rdiff"), collapse = ("monthly"))
pxd_monthly_returns
pxd <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
force_irregular = TRUE)
#checkout the dataset
str(pxd)
head(pxd)
tail(pxd)
class(pxd)
pxd <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA")
#checkout the dataset
str(pxd)
head(pxd)
tail(pxd)
class(pxd)
pxd_chart_format <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
type = "xts", start_date = "2015-08-27",
end_date = "2016-05-03")
pxd_chart <- candleChart(pxd_chart_format)
#import the dataset
pxd <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA")
#checkout the dataset
str(pxd)
head(pxd)
tail(pxd)
class(pxd)
#format for chart
pxd_chart_format <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
type = "xts", start_date = "2015-08-27",
end_date = "newest_available_date")
#chart dataset
pxd_chart <- candleChart(pxd_chart_format)
#import the dataset
pxd <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA")
#checkout the dataset
str(pxd)
head(pxd)
tail(pxd)
class(pxd)
#format for chart
pxd_chart_format <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
type = "xts", start_date = "2015-08-27",
end_date = "2016-05-03")
#chart dataset
pxd_chart <- candleChart(pxd_chart_format)
pxd_close <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
colum_index = 4)
#inspect head
head(pxd_close)
#pull the desired pricing data
pxd_close <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
column_index = 4)
#inspect head
head(pxd_close)
pxd_daily_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
column_index = 4, transform = c("rdiff"),
collapse = ("daily"))
head(pxd_daily_returns)
pxd_weekly_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
transform = c("rdiff"), collapse = ("weekly"))
head(pxd_weekly_returns)
pxd_monthly_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
transform = c("rdiff"), collapse = ("monthly"))
head(pxd_monthly_returns)
pxd_quarterly_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
transform = c("rdiff"), collapse = ("quarterly"))
head(pxd_quarterly_returns)
pxd_weekly_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
column_index = 4, transform = c("rdiff"),
collapse = ("weekly"))
head(pxd_weekly_returns)
pxd_monthly_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
column_index = 4,transform = c("rdiff"),
collapse = ("monthly"))
head(pxd_monthly_returns)
pxd_quarterly_returns <- Quandl("GOOG/NYSE_PXD", api_key="xPN8SdVKiNG7LAACxgfA",
column_index = 4, transform = c("rdiff"),
collapse = ("quarterly"))
head(pxd_quarterly_returns)
#continuously compounded monthly returns
summary(mtcars)
efficient <- subset(mtcars, mtcars$mpg > 23)
efficient <- subset(mtcars, mtcars$mpg > 23)
efficient
?nrows
nrow(efficient)
subset(mtcars, mpg > 30 & hp > 100)
subset(mtcars, mpg < 14 | disp > 390)
subset(mtcars, qsec <= 16.90)
lightCars <- subset(mtcars, wt > 2)
nrow(lightCars)
lightCars
mtcars$year <- 1974
View(mtcars)
View(mtcars)
mtcars <- subset(mtcars, select = -year)
View(mtcars)
mtcars$year <- c(1973, 1974)
mtcars <- subset(mtcars, select = -year)
mtcars$wt
cond <- mtcars$wt < 3
cond
mtcars$weight_class <- ifelse(cond, 'light', 'average')
mtcars$weight_class
cond <- mtcars$wt > 3.5
mtcars$weight_class <- ifelse(cond, 'heavy', mtcars$weight_class)
mtcars$weight_class
rm(cond)
rm(efficient)
install.packages('knitr', dependencies = T)
library(knitr)
install.packages("knitr", dependencies = T)
