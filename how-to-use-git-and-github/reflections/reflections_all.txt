Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

    the interdependency of a git repo is probobaly greated than that of a google docs doc. each doc in google docs has the interrelated information. however, it can be troublesome when you are linked between mutliple files. 

How can you use the commands git log and git diff to view the history of files?

    once i have accessed a git repo by sing git clone and the respective url, i can then take a look at the versions

    git log shows me the history of the repo and from there i can use git diff to compare any two versions to see the differences between each

How might using version control make you more confident to make changes that could break something?
    
    version control enables experimentation because you know that you can reverse engineer the process and return back to a state at which the process worked

Now that you have your workspace set up, what do you want to try using Git for?
    
    i will continue working on becoming a more efficient version controller

What happens when you initialize a repository? Why do you need to do it?
  
    initializing a repo allows you to start tracking files

How is the staging area different from the working directory and the repository? What value do you think it offers?
    
    a staging area prepares the files to be commited and it is different because it is temporary

How can you use the staging area to make sure you have one commit per logical change?

    you can add one file to the staging area at a time and commi them separately to create a logical work flow

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
    
    when you are creating different versions of a game like we did in the asteroid game as well as when we are testing out new possibilities. if we are testing, we dont want to necessarily use version control methods of git log and git diff because that becomes more tediuous. by creating a new branch we are free to explore new ideas without hurting the integrity of the existing program

How do the diagrams help you visualize the branch structure?

    diagrams help you to conceptualize where you are in the commit process and how to move about the commit logs



